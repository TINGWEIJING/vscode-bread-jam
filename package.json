{
  "name": "bread-jam",
  "displayName": "Bread Jam",
  "description": "Make your code variables easier to distinguish with different render patterns.",
  "version": "0.0.2",
  "publisher": "tingcode",
  "author": {
    "name": "Ting Wei Jing",
    "email": "tingweijingting2000@gmail.com",
    "url": "https://tingcode.com"
  },
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#eff1f3",
    "theme": "light"
  },
  "homepage": "https://github.com/TINGWEIJING/vscode-bread-jam/blob/main/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/TINGWEIJING/vscode-bread-jam.git"
  },
  "bugs": {
    "url": "https://github.com/TINGWEIJING/vscode-bread-jam/issues"
  },
  "engines": {
    "vscode": "^1.87.0"
  },
  "license": "MIT",
  "categories": [
    "Programming Languages",
    "Themes",
    "Visualization",
    "Other"
  ],
  "keywords": [
    "code",
    "color",
    "colour",
    "variable",
    "identifier",
    "highlight",
    "emoji",
    "semantic",
    "syntax"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "bread-jam.promptRenderPatternSelection",
        "title": "Bread Jam: Select Render Pattern"
      },
      {
        "command": "bread-jam.clearRenderingsTemporarily",
        "title": "Bread Jam: Clear Renderings Temporarily"
      },
      {
        "command": "bread-jam.reloadRenderings",
        "title": "Bread Jam: Reload Renderings"
      },
      {
        "command": "bread-jam.turnOnOrOff",
        "title": "Bread Jam: Turn On/Off"
      }
    ],
    "configuration": {
      "title": "Bread Jam",
      "properties": {
        "bread-jam.renderDelay": {
          "order": 0,
          "type": "integer",
          "multipleOf": 10,
          "minimum": 100,
          "default": 500,
          "markdownDescription": "Delay in milliseconds before rendering. (Debounce)"
        },
        "bread-jam.ignoreFirstSubtoken": {
          "order": 1,
          "type": "boolean",
          "default": false,
          "markdownDescription": "Ignore the first subtoken. \n\nExample: Given `hasCompleted` variable name, `has` is the first subtoken."
        },
        "bread-jam.selectedRenderPattern": {
          "order": 2,
          "type": "string",
          "default": "01 Subtext - Fade In Gradient - Unique Subtext",
          "enum": [
            "01 Subtext - Fade In Gradient - Unique Subtext",
            "02 Subtext - Fade In Gradient - Unique Text",
            "03 Subtext - Fade In Gradient - Commonly",
            "04 Subtext - Fade Out Gradient - Unique Subtext",
            "05 Subtext - Fade Out Gradient - Unique Text",
            "06 Subtext - Fade Out Gradient - Commonly",
            "07 First Character - Solid Color - Unique Subtext",
            "08 First Character - Solid Color - Unique Text",
            "09 First Character - Solid Color - Commonly",
            "10 Subtext - Solid Color - Unique Subtext",
            "11 Whole Text - Emoji"
          ],
          "markdownDescription": "❗Experimental❗ \n\nSame as command select render pattern"
        },
        "bread-jam.semanticForegroundColors": {
          "order": 3,
          "type": "object",
          "default": {
            "variable:*readonly": "#4FC1FF",
            "parameter:*readonly": "#4FC1FF"
          },
          "patternProperties": {
            "^[a-zA-Z]+[a-zA-Z0-9]*(?::(?:\\*?[a-zA-Z0-9]+)(?:,[a-zA-Z0-9]+)*)?$": {
              "type": "string",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "markdownDescription": "Foreground color for semantic token."
            }
          },
          "additionalProperties": false,
          "markdownDescription": "❗Experimental❗ \n\nSemantic token foreground colors for fade in/out gradient. \n\nThe format of item value is `<semantic token type>:<modifier>[,<modifier>]` \n\nExample of valid item: \n- parameter (applies to `paramater` semantic token type) \n- variable:*readonly (applies to `variable` semantic token type where one of the modifiers is `readonly`) \n- variable:declaration,readonly,local (applies to `variable` semantic token type which must has `declaration`, `readonly` and `local` modifiers) \n\nTo find the appropriate semantic token type and modifiers for your code components, use the `Developer: Inspect Editor Tokens and Scopes` command in VSCode.\n\nAffected render patterns: \n- 01 Subtext - Fade In Gradient - Unique Subtext \n- 02 Subtext - Fade In Gradient - Unique Text \n- 03 Subtext - Fade In Gradient - Commonly \n- 04 Subtext - Fade Out Gradient - Unique Subtext \n- 05 Subtext - Fade Out Gradient - Unique Text \n- 06 Subtext - Fade Out Gradient - Commonly"
        },
        "bread-jam.defaultSemanticForegroundColor": {
          "order": 4,
          "type": "string",
          "default": "#9CDCFE",
          "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
          "markdownDescription": "❗Experimental❗ \n\nDefault color for semantic foreground color. \n\nThis color will be applied to semantic tokens not specifically defined in `Semantic Foreground Colors` setting. \n\nAffected render patterns: \n- 01 Subtext - Fade In Gradient - Unique Subtext \n- 02 Subtext - Fade In Gradient - Unique Text \n- 03 Subtext - Fade In Gradient - Commonly \n- 04 Subtext - Fade Out Gradient - Unique Subtext \n- 05 Subtext - Fade Out Gradient - Unique Text \n- 06 Subtext - Fade Out Gradient - Commonly"
        },
        "bread-jam.commonColor": {
          "order": 5,
          "type": "string",
          "default": "#ffb645",
          "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
          "markdownDescription": "❗Experimental❗ \n\nCommon color. \n\nAffected render patterns: \n- 03 Subtext - Fade In Gradient - Commonly \n- 06 Subtext - Fade Out Gradient - Commonly \n- 09 First Character - Solid Color - Commonly"
        },
        "bread-jam.gradientColors": {
          "order": 6,
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
          },
          "default": [
            "#ffaed2",
            "#ffafb0",
            "#ffb58e",
            "#ffbf72",
            "#ffcb60",
            "#ecd861",
            "#cae475",
            "#a3ed93",
            "#79f2b6",
            "#c4cbff",
            "#e4c0ff",
            "#ffb7ff",
            "#ffb1f3",
            "#ff8dbf",
            "#ff8e93",
            "#ff9664",
            "#ffa42c",
            "#ffb400",
            "#e0c500",
            "#b6d431",
            "#7fe06a",
            "#21e79b",
            "#afb4ff",
            "#d7a6ff",
            "#f79aff",
            "#ff91e8"
          ],
          "markdownDescription": "❗Experimental❗ \n\nGradient colors. \n\nIf experiencing lag with this extension, reducing the number of colors to about 8 may improve performance. \n\nAffected render patterns: \n- 01 Subtext - Fade In Gradient - Unique Subtext \n- 02 Subtext - Fade In Gradient - Unique Text \n- 04 Subtext - Fade Out Gradient - Unique Subtext \n- 05 Subtext - Fade Out Gradient - Unique Text"
        },
        "bread-jam.solidColors": {
          "order": 7,
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
          },
          "default": [
            "#ffaed2",
            "#ffafb0",
            "#ffb58e",
            "#ffbf72",
            "#ffcb60",
            "#ecd861",
            "#cae475",
            "#a3ed93",
            "#79f2b6",
            "#c4cbff",
            "#e4c0ff",
            "#ffb7ff",
            "#ffb1f3",
            "#ff8dbf",
            "#ff8e93",
            "#ff9664",
            "#ffa42c",
            "#ffb400",
            "#e0c500",
            "#b6d431",
            "#7fe06a",
            "#21e79b",
            "#afb4ff",
            "#d7a6ff",
            "#f79aff",
            "#ff91e8"
          ],
          "markdownDescription": "❗Experimental❗ \n\nSolid colors. \n\nAffected render patterns: \n- 07 First Character - Solid Color - Unique Subtext \n- 08 First Character - Solid Color - Unique Text"
        },
        "bread-jam.fadeInGradientSteps": {
          "order": 8,
          "type": "array",
          "items": {
            "type": "number"
          },
          "multipleOf": 0.01,
          "minimum": 0,
          "maximum": 1,
          "default": [
            0,
            0.07,
            0.13,
            0.2,
            0.27,
            0.33,
            0.4,
            0.47,
            0.53,
            0.6,
            0.67,
            0.73,
            0.8,
            0.87,
            0.93,
            1
          ],
          "minItems": 16,
          "maxItems": 16,
          "markdownDescription": "❗Experimental❗ \n\nGradient steps for fade in. \n\nAffected render patterns: \n- 01 Subtext - Fade In Gradient - Unique Subtext \n- 02 Subtext - Fade In Gradient - Unique Text \n- 03 Subtext - Fade In Gradient - Commonly"
        },
        "bread-jam.fadeOutGradientSteps": {
          "order": 9,
          "type": "array",
          "items": {
            "type": "number"
          },
          "multipleOf": 0.01,
          "minimum": 0,
          "maximum": 1,
          "default": [
            1,
            0.93,
            0.87,
            0.8,
            0.73,
            0.67,
            0.6,
            0.53,
            0.47,
            0.4,
            0.33,
            0.27,
            0.2,
            0.13,
            0.07,
            0
          ],
          "minItems": 16,
          "maxItems": 16,
          "markdownDescription": "❗Experimental❗ \n\nGradient steps for fade out. \n\nAffected render patterns: \n- 04 Subtext - Fade Out Gradient - Unique Subtext \n- 05 Subtext - Fade Out Gradient - Unique Text \n- 06 Subtext - Fade Out Gradient - Commonly"
        },
        "bread-jam.emojis": {
          "order": 10,
          "type": "array",
          "items": {
            "type": "object"
          },
          "default": [
            "😃",
            "🥰",
            "🤢",
            "🥵",
            "🥶",
            "😎",
            "😱",
            "😡",
            "💩",
            "👻",
            "👽",
            "🤖",
            "💖",
            "💥",
            "💫",
            "💦",
            "💨",
            "🦷",
            "🦴",
            "👀",
            "🐵",
            "🐶",
            "🦊",
            "🐱",
            "🦁",
            "🐯",
            "🐴",
            "🦄",
            "🐮",
            "🐷",
            "🐭",
            "🐹",
            "🐰",
            "🐻‍❄️",
            "🐨",
            "🐼",
            "🐔",
            "🐤",
            "🐸",
            "🐳",
            "🐬",
            "🐡",
            "🐚",
            "🦋",
            "💐",
            "🌸",
            "🌹",
            "🌺",
            "🌻",
            "🌼",
            "🌷",
            "🌱",
            "🍀",
            "🍄",
            "🍉",
            "🍋",
            "🍌",
            "🍎",
            "🍑",
            "🍒",
            "🥝",
            "🥑",
            "🌽",
            "🌶",
            "🍞",
            "🥐",
            "🥨",
            "🥯",
            "🧀",
            "🍖",
            "🍔",
            "🍟",
            "🍕",
            "🌭",
            "🥪",
            "🌮",
            "🥚",
            "🍿",
            "🍙",
            "🍚",
            "🍜",
            "🍣",
            "🍤",
            "🍥",
            "🍡",
            "🍦",
            "🍩",
            "🍪",
            "🎂",
            "🍰",
            "🍫",
            "🍭",
            "🍮",
            "🍼",
            "🍺",
            "🧭",
            "🏖",
            "⛺",
            "🛟",
            "⏰",
            "🌙",
            "🌡",
            "🌟",
            "🌤",
            "🌧",
            "🔥",
            "💧",
            "🌊",
            "🎃",
            "🎄",
            "🎉",
            "🎁",
            "⚽",
            "⚾",
            "🏀",
            "🏐",
            "🏈",
            "🎾",
            "🏓",
            "🎲",
            "🧩",
            "🎨",
            "🛍",
            "👑",
            "💎",
            "🥁",
            "📚",
            "🧽"
          ],
          "maxItems": 256,
          "markdownDescription": "❗Experimental❗ \n\nEmojis. This should only be modified via the JSON settings for precise control. \n\nAffected render patterns: \n- 11 Whole Text - Emoji"
        },
        "bread-jam.targetedSemanticTokenTypes": {
          "order": 11,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "namespace",
              "class",
              "enum",
              "interface",
              "struct",
              "typeParameter",
              "type",
              "parameter",
              "variable",
              "property",
              "enumMember",
              "decorator",
              "event",
              "function",
              "method",
              "macro",
              "label",
              "comment",
              "string",
              "keyword",
              "number",
              "regexp",
              "operator"
            ]
          },
          "default": [
            "variable",
            "parameter",
            "property"
          ],
          "uniqueItems": true,
          "markdownDescription": "❗Experimental❗ \n\nTargeted Semantic token types to render. \n\nTo find the appropriate semantic token type for your code components, use the `Developer: Inspect Editor Tokens and Scopes` command in VSCode."
        },
        "bread-jam.permutationTable": {
          "order": 12,
          "type": "array",
          "items": {
            "type": "object"
          },
          "uniqueItems": true,
          "multipleOf": 1,
          "minimum": 0,
          "maximum": 255,
          "default": [
            234,
            9,
            103,
            60,
            5,
            79,
            232,
            229,
            45,
            51,
            131,
            3,
            168,
            29,
            170,
            216,
            99,
            161,
            111,
            204,
            220,
            209,
            78,
            89,
            72,
            191,
            157,
            119,
            226,
            184,
            244,
            134,
            21,
            61,
            175,
            15,
            223,
            100,
            230,
            28,
            128,
            185,
            84,
            208,
            164,
            44,
            113,
            105,
            27,
            85,
            203,
            146,
            153,
            130,
            66,
            42,
            250,
            140,
            174,
            133,
            115,
            4,
            52,
            73,
            65,
            10,
            104,
            238,
            30,
            211,
            46,
            121,
            2,
            190,
            159,
            172,
            112,
            156,
            95,
            47,
            124,
            177,
            77,
            202,
            81,
            38,
            123,
            13,
            182,
            242,
            64,
            33,
            225,
            0,
            241,
            122,
            210,
            37,
            106,
            163,
            82,
            98,
            34,
            218,
            187,
            214,
            125,
            132,
            120,
            219,
            252,
            32,
            135,
            215,
            245,
            48,
            198,
            222,
            76,
            231,
            213,
            192,
            227,
            144,
            19,
            152,
            110,
            12,
            217,
            126,
            196,
            201,
            248,
            148,
            109,
            138,
            63,
            249,
            200,
            36,
            197,
            101,
            127,
            145,
            149,
            54,
            16,
            167,
            102,
            80,
            239,
            181,
            14,
            83,
            224,
            142,
            69,
            176,
            118,
            171,
            251,
            136,
            43,
            246,
            155,
            18,
            165,
            68,
            53,
            90,
            94,
            41,
            93,
            162,
            116,
            212,
            205,
            25,
            235,
            193,
            74,
            58,
            169,
            199,
            17,
            180,
            49,
            147,
            92,
            158,
            160,
            75,
            141,
            20,
            96,
            31,
            137,
            117,
            186,
            11,
            67,
            233,
            88,
            91,
            24,
            97,
            237,
            247,
            86,
            195,
            236,
            39,
            221,
            87,
            240,
            178,
            40,
            206,
            194,
            1,
            207,
            71,
            150,
            114,
            56,
            107,
            243,
            179,
            166,
            183,
            50,
            143,
            254,
            154,
            129,
            59,
            55,
            23,
            7,
            8,
            108,
            151,
            22,
            139,
            228,
            253,
            173,
            26,
            188,
            35,
            255,
            62,
            70,
            189,
            6,
            57
          ],
          "minItems": 256,
          "maxItems": 256,
          "markdownDescription": "❗Experimental❗ \n\nA permutation table used for Pearson hashing. \n\nAltering the table changes the hash results, which influences the color assignment of render patterns. \n\n**Note:** This table must contain exactly 256 unique values, each ranging from 0 to 255 \n\nThis should only be modified via the JSON settings for precise control."
        }
      }
    },
    "keybindings": [
      {
        "command": "bread-jam.turnOnOrOff",
        "key": "alt+b alt+j"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "prepare": "husky",
    "deploy": "vsce publish --no-yarn"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.87.0",
    "@typescript-eslint/eslint-plugin": "^7.0.2",
    "@typescript-eslint/parser": "^7.0.2",
    "@vscode/test-cli": "^0.0.6",
    "@vscode/test-electron": "^2.3.9",
    "@vscode/vsce": "^2.26.1",
    "eslint": "^8.56.0",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.2",
    "prettier": "3.2.5",
    "typescript": "^5.3.3"
  },
  "lint-staged": {
    "**/*": "prettier --write --ignore-unknown"
  }
}
